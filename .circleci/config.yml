version: 2.1

aliases:
  - &macos-env
    xcode: 15.3.0

  - &save-node-modules-cache
    name: Save node_modules cache
    paths:
      - node_modules
    key: yarn-packages-macos-{{ checksum "yarn.lock" }}

  - &restore-node-modules-cache
    name: Restore node_modules cache
    key: yarn-packages-macos-{{ checksum "yarn.lock" }}

  - &save-yarn-cache
    name: Save yarnpkg cache
    paths:
      - .yarn/cache
    key: yarn-cache-macos-v1

  - &restore-yarn-cache
    name: Restore yarnpkg cache
    key: yarn-cache-macos-v1

jobs:
  checkout-code:
    macos: *macos-env
    steps:
      - checkout
      - run: git submodule init
      - run: git submodule update
      - restore_cache: *restore-yarn-cache
      - restore_cache: *restore-node-modules-cache
      - run: sudo corepack enable
      - run: yarn
      - save_cache: *save-node-modules-cache
      - save_cache: *save-yarn-cache
      - persist_to_workspace:
          root: "."
          paths: [packages/*/node_modules]

  build:
    macos: *macos-env
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: yarn build
      - persist_to_workspace:
          root: "."
          paths:
            - packages/*/lib
            - packages/*/dist

  check-format:
    macos: *macos-env
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: yarn check-format

  check-lint:
    macos: *macos-env
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: yarn check-lint

  check-types:
    macos: *macos-env
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: yarn check-types

  dist:
    macos: *macos-env
    environment:
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run:
          name: Install Deno & set $BASH_ENV
          command: |
            curl -fsSL https://deno.land/install.sh | sh
            echo 'export HOME_DIR=$(dirname "$CIRCLE_WORKING_DIRECTORY")' >> "$BASH_ENV"
            echo 'export DENO_INSTALL="$HOME_DIR/.deno"' >> "$BASH_ENV"
            echo 'export PATH="$DENO_INSTALL/bin:$PATH"' >> "$BASH_ENV"
      - run:
          name: Build CLI and App distributions
          command: |
            source "$BASH_ENV"
            yarn dist

workflows:
  build-lint-dist:
    jobs:
      - checkout-code
      - build:
          requires: [checkout-code]
      - check-format:
          requires: [checkout-code]
      - check-lint:
          # ESLint rules with type checking require dependent packages to be built
          requires: [build]
      - check-types:
          requires: [build]
      - dist:
          requires: [build]
